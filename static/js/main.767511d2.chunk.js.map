{"version":3,"sources":["ArrayBuffer.prototype.js","i18n/en-us.ts","i18n/ja.ts","i18n/Translate.ts","components/LanguagePickerButton.tsx","containers/AppNavigation.tsx","logic/AudioRenderer.ts","components/Banner.tsx","components/FilePickerButton.tsx","components/InvertCheckbox.tsx","components/PauseButton.tsx","components/PlayButton.tsx","components/StopButton.tsx","components/WaveShapeImage.tsx","containers/PhaseInverter.tsx","App.tsx","index.tsx"],"names":["myArrayBuffer","Promise","resolve","fr","FileReader","onload","result","readAsArrayBuffer","File","prototype","arrayBuffer","Blob","enUS","appName","leftWaveShapeImage","rightWaveShapeImage","leftPhaseInvertedCheckbox","rightPhaseInvertedCheckbox","playButton","pauseButton","stopButton","fileChooseMessage","fileLoadMessage","ja","Translate","language","LanguagePickerButton","props","FormControl","Select","native","value","onChange","e","setLanguage","target","style","color","inputProps","name","id","AppNavigation","AppBar","backgroundColor","Container","maxWidth","Toolbar","marginLeft","marginRight","Link","href","repositoryURL","onAudioProcess","event","numberOfChannels","inputBuffer","is","os","channel","getChannelData","outputBuffer","i","this","bufferSize","phaseValues","AudioRenderer","opt","ac","buffer","source","processor","analyser","isReadyToPlay","isPlaying","playbackDuration","totalPlaybackDuration","setIsReadyToPlay","setIsPlaying","setIsLeftPhaseInverted","setIsRightPhaseInverted","setAnalyser","data","stop","SupportedAudioContext","window","AudioContext","webkitAudioContext","decodeAudioData","audioWorklet","addModule","AudioWorkletNode","createScriptProcessor","onaudioprocess","bind","createBufferSource","onended","createAnalyser","connect","destination","prepare","start","currentTime","ScriptProcessorNode","left","parameters","get","right","Banner","fontSize","margin","files","load","setFilename","a","length","file","item","FilePickerButton","useState","filename","status","setStatus","useEffect","ready","Button","component","type","handleFileOpen","onLoad","display","InvertCheckbox","FormControlLabel","label","control","Checkbox","checked","PauseButton","IconButton","autoFocus","onClick","aria-label","disabled","PlayButton","StopButton","WaveShapeImage","refWaveShapeImage","useRef","current","ctx","getContext","intervalId","setInterval","wavdata","Uint8Array","getByteTimeDomainData","fillStyle","fillRect","drawWaveShape","clearInterval","ref","width","height","background","PhaseInverter","isLeftPhaseInverted","isRightPhaseInverted","audioRenderer","useMemo","Box","flexDirection","justifyContent","pause","play","Divider","invertLeftPhase","invertRightPhase","App","isInitialized","setIsInitialized","defaultLanguage","location","hash","toString","replace","document","title","ReactDOM","render","CssBaseline","querySelector"],"mappings":"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","file":"static/js/main.767511d2.chunk.js","sourcesContent":["// Author: @hanayashiki\n// URL: https://gist.github.com/hanayashiki/8dac237671343e7f0b15de617b0051bd\n// LICENSE: I don't know this code snipet license, but it seems MIT or copyleft.\n\n(function () {\n  File.prototype.arrayBuffer = File.prototype.arrayBuffer || myArrayBuffer;\n  Blob.prototype.arrayBuffer = Blob.prototype.arrayBuffer || myArrayBuffer;\n\n  function myArrayBuffer() {\n    // this: File or Blob\n    return new Promise((resolve) => {\n      let fr = new FileReader();\n      fr.onload = () => {\n        resolve(fr.result);\n      };\n      fr.readAsArrayBuffer(this);\n    })\n  }\n})();\n\n// This is a simple trick to implement Blob.arrayBuffer (https://developer.mozilla.org/en-US/docs/Web/API/Blob/arrayBuffer) using FileReader\n","import Translation from './Translation';\n\nconst enUS: Translation = {\n  appName: \"Audio Signal Phase Inversion\",\n  leftWaveShapeImage: \"Left channel wave shape\",\n  rightWaveShapeImage: \"Right channel wave shape\",\n  leftPhaseInvertedCheckbox: \"INVERT L CHANNEL\",\n  rightPhaseInvertedCheckbox: \"INVERT R CHANNEL\",\n  playButton: \"PLAY\",\n  pauseButton: \"PAUSE\",\n  stopButton: \"STOP\",\n  fileChooseMessage: \"CHOOSE AUDIO FILE\",\n  fileLoadMessage: \"LOADING ...\"\n};\n\nexport default enUS;\n","import Translation from './Translation';\n\nconst ja: Translation = {\n  appName: \"音声信号の位相反転\",\n  leftWaveShapeImage: \"左チャネルの波形\",\n  rightWaveShapeImage: \"右チャネルの波形\",\n  leftPhaseInvertedCheckbox: \"左チャネルを反転\",\n  rightPhaseInvertedCheckbox: \"右チャネルを反転\",\n  playButton: \"再生\",\n  pauseButton: \"一時停止\",\n  stopButton: \"停止\",\n  fileChooseMessage: \"音声ファイルを開く\",\n  fileLoadMessage: \"読み込み中 ...\"\n};\n\nexport default ja;\n","import Translation from './Translation';\nimport enUS from './en-us';\nimport ja from './ja';\n\nexport default function Translate(language: string): Translation {\n  switch (language) {\n  case 'en-US':\n    return enUS;\n  case 'ja':\n    return ja;\n  }\n\n  return enUS;\n}\n","import React from 'react';\n\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\n\nexport default function LanguagePickerButton(props: any) {\n  return (\n    <div>\n      <FormControl>\n        <Select native value={props.language}\n          onChange={(e) => props.setLanguage(e.target.value)}\n          style={{color: '#FFF'}}\n          inputProps={{\n          name: 'language',\n          id: 'language-native-simple',\n        }}>\n          <option value=\"en-us\">English</option>\n          <option value=\"ja\">日本語</option>\n        </Select>\n      </FormControl>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport AppBar from '@material-ui/core/AppBar';\nimport Container from '@material-ui/core/Container';\nimport Link from '@material-ui/core/Link';\nimport Toolbar from '@material-ui/core/Toolbar';\n\nimport LanguagePickerButton from '../components/LanguagePickerButton';\n\nexport default function AppNavigation(props: any) {\n  return (\n    <div>\n      <AppBar style={{backgroundColor: '#555'}}>\n        <Container maxWidth=\"sm\">\n          <Toolbar>\n            <LanguagePickerButton style={{marginLeft: '0', marginRight: 'auto'}} setLanguage={props.setLanguage} language={props.language} />\n            <Link href={props.repositoryURL} style={{marginLeft: 'auto', marginRight: '0', color: '#FFF'}}>View on GitHub</Link>\n          </Toolbar>\n        </Container>\n      </AppBar>\n      <Toolbar />\n    </div>\n  );\n}\n","interface OnAudioProcessParam {\n  bufferSize: number;\n  phaseValues: number[];\n}\n\nfunction onAudioProcess(this: OnAudioProcessParam, event: AudioProcessingEvent): any {\n  // According to the Web Audio API specification, because of up-mixing, we can assume that the number of both input and output channels are same.\n  const numberOfChannels: number = event.inputBuffer.numberOfChannels;\n\n  const is : Float32Array[] = [];\n  const os : Float32Array[] = [];\n\n  for (let channel: number = 0; channel < numberOfChannels; channel++) {\n    is[channel] = event.inputBuffer.getChannelData(channel);\n    os[channel] = event.outputBuffer.getChannelData(channel);\n  }\n  for (let i: number = 0; i < this.bufferSize; i++) {\n    for (let channel: number = 0; channel < numberOfChannels; channel++) {\n      os[channel][i] = this.phaseValues[channel % 2] * is[channel][i];\n    }\n  }\n}\n\ninterface AudioRendererOption {\n  setIsReadyToPlay: (a: boolean) => void;\n  setIsPlaying: (a: boolean) => void;\n  setIsLeftPhaseInverted: (a: boolean) => void;\n  setIsRightPhaseInverted: (a: boolean) => void;\n  setAnalyser: (a: AnalyserNode | null) => void;\n}\n\nexport default class AudioRenderer {\n  ac: AudioContext | null;\n  buffer: AudioBuffer | null;\n  source: AudioBufferSourceNode | null;\n  processor: AudioWorkletNode | ScriptProcessorNode | null;\n  analyser: AnalyserNode | null;\n\n  isReadyToPlay: boolean;\n  isPlaying: boolean;\n  phaseValues: number[];\n  playbackDuration: number;\n  totalPlaybackDuration: number;\n\n  setIsReadyToPlay: (a: boolean) => void;\n  setIsPlaying: (a: boolean) => void;\n  setIsLeftPhaseInverted: (a: boolean) => void;\n  setIsRightPhaseInverted: (a: boolean) => void;\n  setAnalyser: (a: AnalyserNode | null) => void;\n\n  constructor(opt: AudioRendererOption) {\n    this.ac = null;\n    this.buffer = null;\n    this.source = null;\n    this.processor = null;\n    this.analyser = null;\n\n    this.isReadyToPlay = false;\n    this.isPlaying = false;\n    this.phaseValues = [1.0, 1.0];\n    this.playbackDuration = 0;\n    this.totalPlaybackDuration= 0;\n\n    this.setIsReadyToPlay = opt.setIsReadyToPlay;\n    this.setIsPlaying = opt.setIsPlaying;\n    this.setIsLeftPhaseInverted= opt.setIsLeftPhaseInverted;\n    this.setIsRightPhaseInverted= opt.setIsRightPhaseInverted;\n    this.setAnalyser = opt.setAnalyser;\n  }\n  async load(data: ArrayBuffer) {\n    if (this.isPlaying) {\n      this.stop();\n    }\n\n    this.ac = null;\n    this.buffer = null;\n\n    this.setIsReadyToPlay(this.isReadyToPlay = false);\n    this.setAnalyser(null);\n\n    try {\n      const SupportedAudioContext: any = window.AudioContext || (window as any).webkitAudioContext;\n\n      // Use the custom constructor because 'webkit' prefix is required on the Safari.\n      this.ac = new SupportedAudioContext() as AudioContext;\n\n      this.ac.decodeAudioData(data, (buffer: AudioBuffer) => {\n        this.buffer = buffer;\n        this.setIsReadyToPlay(this.isReadyToPlay = true);\n      });\n    } catch (e) {\n      throw (e);\n    }\n  }\n  async prepare() {\n    if (!this.ac || !this.buffer) {\n      return;\n    }\n    if (this.ac.audioWorklet) {\n      await this.ac.audioWorklet.addModule(\"PhaseInverter.js\");\n\n      this.processor = new AudioWorkletNode(this.ac,\"PhaseInverter\");\n    } else {\n      this.processor = this.ac.createScriptProcessor(4096);\n\n      this.processor.onaudioprocess = onAudioProcess.bind({bufferSize: this.processor.bufferSize, phaseValues: this.phaseValues});\n    }\n\n    this.source = this.ac.createBufferSource();\n    this.source.buffer = this.buffer;\n    this.source.onended = () => {\n      if (!this.isPlaying) {\n        return;\n      }\n\n      this.stop();\n    };\n\n    this.analyser = this.ac.createAnalyser();\n\n    this.source.connect(this.processor);\n    this.processor.connect(this.analyser);\n    this.analyser.connect(this.ac.destination);\n\n    this.setAnalyser(this.analyser);\n  }\n  async play() {\n    await this.prepare();\n\n    if (!this.ac || !this.source) {\n      return;\n    }\n\n    this.source.start(0, this.totalPlaybackDuration);\n\n    this.playbackDuration = this.ac.currentTime;\n\n    this.setIsPlaying(this.isPlaying = true);\n  }\n  pause() {\n    if (!this.ac) {\n      return;\n    }\n\n    this.playbackDuration = this.ac.currentTime - this.playbackDuration;\n    this.totalPlaybackDuration += this.playbackDuration;\n    this.setIsPlaying(this.isPlaying = false);\n\n    if (!this.source) {\n      return;\n    }\n\n    this.source.stop();\n  }\n  stop() {\n    this.playbackDuration = 0;\n    this.totalPlaybackDuration = 0;\n    this.setIsPlaying(this.isPlaying = false);\n\n    if (!this.source) {\n      return;\n    }\n\n    this.source.stop();\n  }\n  invertLeftPhase() {\n    this.phaseValues[0] = this.phaseValues[0] === 1.0 ? -1.0 : 1.0;\n    this.setIsLeftPhaseInverted(this.phaseValues[0] === -1.0);\n\n    if (!this.processor || this.processor instanceof ScriptProcessorNode) {\n      return;\n    }\n\n    const left: AudioParam | undefined = this.processor.parameters.get(\"leftPhaseInverted\");\n\n    if (!left) {\n      return;\n    }\n\n    left.value = this.phaseValues[0];\n  }\n  invertRightPhase() {\n    this.phaseValues[1] = this.phaseValues[1] === 1.0 ? -1.0 : 1.0;\n    this.setIsRightPhaseInverted(this.phaseValues[1] === -1.0);\n\n    if (!this.processor || this.processor instanceof ScriptProcessorNode) {\n      return;\n    }\n\n    const right: AudioParam | undefined = this.processor.parameters.get(\"rightPhaseInverted\");\n\n    if (!right) {\n      return;\n    }\n\n    right.value = this.phaseValues[1];\n  }\n}\n","import React from 'react';\n\nimport Translate from '../i18n/Translate';\n\nexport default function Banner(props: any) {\n  return (\n    <div>\n      <h1 style={{fontSize: \"16pt\", margin: \"16pt 0 8pt\"}}>\n        {Translate(props.language).appName}\n      </h1>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\n\nimport Button from '@material-ui/core/Button';\n\nimport Translate from '../i18n/Translate';\n\nasync function handleFileOpen(files: FileList | null, load: (a: ArrayBuffer) => Promise<void>, setFilename: (a: string) => void) {\n  if (!files || files.length === 0) {\n    return;\n  }\n\n  const file = files.item(0);\n\n  if (!file) {\n    return;\n  }\n\n  setFilename(file.name);\n\n  const buffer = await file.arrayBuffer();\n\n  load(buffer);\n}\n\nexport default function FilePickerButton(props: any) {\n  const [filename, setFilename] = useState('') as [string, (a: string) => void];\n  const [status, setStatus] = useState('') as [string, (a: string) => void];\n\n  useEffect(() => {\n    if (props.ready) {\n      setStatus(filename);\n    }\n  }, [props.ready, setStatus, filename]);\n\n  useEffect(() => {\n    if (!props.ready) {\n      setStatus(Translate(props.language).fileChooseMessage);\n    }\n  }, [props.ready, props.language, setStatus]);\n\n  return (\n    <div>\n      <Button\n        component=\"label\"\n        style={{margin: '16pt 0 8pt', color: '#FFF', backgroundColor: '#C11'}}\n      >\n        {status}\n        <input\n          type=\"file\"\n          id=\"file-picker-button\"\n          onChange={(e) => {\n            setStatus(Translate(props.language).fileLoadMessage);\n            handleFileOpen(e.target.files, props.onLoad, setFilename);\n          }}\n          style={{display: \"none\"}}\n        />\n      </Button>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport Checkbox from '@material-ui/core/Checkbox';\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\n\nimport Translate from '../i18n/Translate';\n\nexport default function InvertCheckbox(props: any) {\n  return (\n    <div>\n      <FormControlLabel\n        label={\n          props.channel === 'left'\n          ? Translate(props.language).leftPhaseInvertedCheckbox\n          : Translate(props.language).rightPhaseInvertedCheckbox\n        }\n        control={\n          <Checkbox checked={props.checked} onChange={() => props.onChange()} />\n        }\n      />\n    </div>\n  );\n}\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport PauseIcon from '@material-ui/icons/Pause';\n\nimport Translate from '../i18n/Translate';\n\nexport default function PauseButton(props: any) {\n  return (\n    <div>\n      <IconButton autoFocus onClick={props.onClick} aria-label={Translate(props.language).pauseButton} disabled={props.disabled} color=\"primary\">\n        <PauseIcon style={props.disabled ? {fontSize: 32, color: '#777'} : {fontSize: 32, color: '#000'}} />\n      </IconButton>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport PlayArrowIcon from '@material-ui/icons/PlayArrow';\n\nimport Translate from '../i18n/Translate';\n\nexport default function PlayButton(props: any) {\n  return (\n    <div>\n      <IconButton autoFocus onClick={props.onClick} aria-label={Translate(props.language).playButton} disabled={props.disabled} color=\"primary\">\n        <PlayArrowIcon style={props.disabled ? {fontSize: 32, color: '#777'} : {fontSize: 32, color: '#000'}} />\n      </IconButton>\n    </div>\n  );\n}\n","import React from 'react';\n\nimport IconButton from '@material-ui/core/IconButton';\n\nimport StopIcon from '@material-ui/icons/Stop';\n\nimport Translate from '../i18n/Translate';\n\nexport default function StopButton(props: any) {\n  return (\n    <div>\n      <IconButton onClick={props.onClick} aria-label={Translate(props.language).stopButton} disabled={props.disabled} color=\"primary\">\n        <StopIcon style={props.disabled ? {fontSize: 32, color: '#777'} : {fontSize: 32, color: '#000'}} />\n      </IconButton>\n    </div>\n  );\n}\n","import React, {useEffect, useRef} from 'react';\n\nimport Translate from '../i18n/Translate';\n\nfunction drawWaveShape(channel: number, ctx: CanvasRenderingContext2D, analyser: AnalyserNode | null) {\n  if (analyser === null) {\n    return;\n  }\n\n  const wavdata = new Uint8Array(256);\n\n  analyser.getByteTimeDomainData(wavdata);\n\n  ctx.fillStyle = '#000000';\n  ctx.fillRect(0, 0, 256, 256);\n\n  ctx.fillStyle = '#FFF';\n\n  for(let i = 0; i < 256; i += 2) {\n    ctx.fillRect(i, 128, 1, 128 - wavdata[i + channel]);\n  }\n}\n\nexport default function WaveShapeImage(props: any) {\n  const refWaveShapeImage = useRef<HTMLCanvasElement | null>(null);\n\n  useEffect(() => {\n    if (!props.analyser || !refWaveShapeImage || !refWaveShapeImage.current) {\n      return;\n    }\n\n    const ctx: CanvasRenderingContext2D | null = refWaveShapeImage.current.getContext('2d');\n\n    if (!ctx) {\n      return;\n    }\n\n    const intervalId = setInterval(() => {\n      drawWaveShape(props.channel === 'left' ? 0 : 1, ctx, props.analyser);\n    }, 100);\n\n    return () => {\n      clearInterval(intervalId);\n    };\n  }, [props.channel, props.analyser]);\n\n  return (\n    <div>\n      <canvas\n        aria-label={props.channel === 'left' ? Translate(props.language).leftWaveShapeImage : Translate(props.language).rightWaveShapeImage}\n        ref={refWaveShapeImage}\n        width={256} height={256}\n        style={{width: \"128px\", height: \"128px\", background: '#000'}}\n      >\n        {props.channel === 'left' ? Translate(props.language).leftWaveShapeImage : Translate(props.language).rightWaveShapeImage}\n      </canvas>\n    </div>\n  );\n}\n","import React, {useState, useMemo} from 'react';\n\nimport Box from '@material-ui/core/Box';\nimport Container from '@material-ui/core/Container';\nimport Divider from '@material-ui/core/Divider';\n\nimport AudioRenderer from '../logic/AudioRenderer';\n\nimport Banner from '../components/Banner';\nimport FilePickerButton from '../components/FilePickerButton';\nimport InvertCheckbox from '../components/InvertCheckbox';\nimport PauseButton from '../components/PauseButton';\nimport PlayButton from '../components/PlayButton';\nimport StopButton from '../components/StopButton';\nimport WaveShapeImage from '../components/WaveShapeImage';\n\nexport default function PhaseInverter(props: any) {\n  const [isReadyToPlay, setIsReadyToPlay] = useState(false) as [boolean, (a: boolean) => void];\n  const [isPlaying, setIsPlaying] = useState(false) as [boolean, (a: boolean) => void];\n  const [isLeftPhaseInverted, setIsLeftPhaseInverted] = useState(false) as [boolean, (a: boolean) => void];\n  const [isRightPhaseInverted, setIsRightPhaseInverted] = useState(false) as [boolean, (a: boolean) => void];\n  const [analyser, setAnalyser] = useState(null) as [AnalyserNode | null, (a: AnalyserNode | null) => void];\n\n  const audioRenderer = useMemo((): AudioRenderer => {\n    return new AudioRenderer({\n      setIsReadyToPlay,\n      setIsPlaying,\n      setIsLeftPhaseInverted,\n      setIsRightPhaseInverted,\n      setAnalyser\n    }) as AudioRenderer;\n  }, [setIsReadyToPlay, setIsPlaying, setIsLeftPhaseInverted, setIsRightPhaseInverted, setAnalyser]) as AudioRenderer;\n\n  return (\n    <div>\n      <Container maxWidth=\"sm\">\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Box display=\"flex\" justifyContent=\"center\">\n            <Banner language={props.language} />\n          </Box>\n        </Box>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Box display=\"flex\" justifyContent=\"center\">\n            <WaveShapeImage channel=\"left\" analyser={analyser} language={props.language} />\n            <WaveShapeImage channel=\"right\" analyser={analyser} language={props.language} />\n          </Box>\n        </Box>\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Box display=\"flex\" justifyContent=\"center\">\n            {\n              isPlaying\n              ? <PauseButton onClick={() => audioRenderer.pause()} disabled={!isReadyToPlay} language={props.language}/>\n              : <PlayButton onClick={() => audioRenderer.play()} disabled={!isReadyToPlay} language={props.language} />\n            }\n            <StopButton onClick={() => audioRenderer.stop()} disabled={!isReadyToPlay} language={props.language} />\n          </Box>\n        </Box>\n        <Divider />\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Box display=\"flex\" justifyContent=\"center\">\n            <InvertCheckbox channel=\"left\" checked={isLeftPhaseInverted} onChange={() => audioRenderer.invertLeftPhase()} language={props.language}/>\n            <InvertCheckbox channel=\"right\" checked={isRightPhaseInverted} onChange={() => audioRenderer.invertRightPhase()} language={props.language}/>\n          </Box>\n        </Box>\n        <Divider />\n        <Box display=\"flex\" flexDirection=\"column\">\n          <Box display=\"flex\" justifyContent=\"center\">\n            <FilePickerButton ready={isReadyToPlay} onLoad={audioRenderer.load.bind(audioRenderer)} language={props.language} />\n          </Box>\n        </Box>\n      </Container>\n    </div>\n  );\n}\n","import React, {useState, useEffect} from 'react';\n\nimport Translate from './i18n/Translate';\n\nimport AppNavigation from './containers/AppNavigation';\nimport PhaseInverter from './containers/PhaseInverter';\n\nexport default function App() {\n  const repositoryURL: string = 'https://github.com/moutend/PhaseInversion/';\n\n  const [isInitialized, setIsInitialized] = useState(false) as [boolean, (a: boolean) => void];\n  const [language, setLanguage] = useState('') as [string, (a: string) => void];\n\n  useEffect(() => {\n    if (isInitialized) {\n      return;\n    }\n\n    const defaultLanguage: string = window.location.hash.toString().replace(/^#/, \"\");\n\n    setLanguage(defaultLanguage);\n    setIsInitialized(true);\n\n    if (defaultLanguage !== '') {\n      document.title = Translate(defaultLanguage).appName;\n    }\n  });\n\n  useEffect(() => {\n    if (language === '') {\n      return;\n    }\n\n    const hash: string = window.location.hash.toString();\n    const href: string = window.location.href.replace(hash, \"\");\n\n    window.location.href = (href + \"#\" + language);\n    document.title = Translate(language).appName;\n  }, [language]);\n\n  return (\n    <div>\n      <AppNavigation repositoryURL={repositoryURL} setLanguage={setLanguage} language={language} />\n      <PhaseInverter language={language} />\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nimport CssBaseline from '@material-ui/core/CssBaseline';\n\nimport App from './App';\n\n// Support Blob.prototype.arrayBuffer() on Safari.\nimport './ArrayBuffer.prototype';\n\nReactDOM.render(\n  <div>\n    {/* CssBaseline kickstart an elegant, consistent, and simple baseline to build upon. */}\n    <CssBaseline />\n    <App />\n  </div>,\n  document.querySelector('#root'),\n);\n"],"sourceRoot":""}